[tool.poetry]
name = "edmlib"
# handled via git tags:
version = "0.0.0"
description = "Python utilities for working with the EDM (Europeana Data Model). Maps all EDM-classes and properties to pydantic models and attributes."
authors = ["Gregor Pirgie <gregor.pirgie@nhm-wien.ac.at>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "./edmlib" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0.0"
rdflib = "^7.0.0"
lxml = "^5.1.0"
pydantic = "^2.10.3"
pyld = "^2.0.3"
requests = "^2.32.3"


[tool.poetry.group.dev.dependencies]
jupyter = "^1.0.0"
jupyter-server = "^2.12.5"
jupyterlab = "^4.1.1"
ruff = "^0.8.1"
pytest = "^8.1.1"
polyfactory = "^2.18.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>[0-9]+[.][0-9]+[.][0-9]+)$"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# SEE ALL RULES HERE https://docs.astral.sh/ruff/rules/
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "FIX002",
    "PTH",
    "ARG",
    "TID",
    "SIM",
    "SLOT",
    "SLF",
    "RET",
    "Q",
    "G",
    "LOG",
    "C4",
    "COM",
    "CPY",
    "BLE",
    "ANN",
    "D211",


] # Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
#select = ["E4", "E7", "E9", "F"]
ignore = ["E501"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
